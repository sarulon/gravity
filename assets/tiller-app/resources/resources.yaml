apiVersion: v1
kind: ServiceAccount
metadata:
  name: tiller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: tiller
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tiller-deploy
  namespace: kube-system
  labels:
    app: helm
    name: tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm
      name: tiller
  template:
    metadata:
      labels:
        app: helm
        name: tiller
        gravitational.io/critical-pod: ''
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      serviceAccountName: tiller
      tolerations:
      - key: "gravitational.io/runlevel"
        value: system
        operator: Equal
        # allows to run on master nodes
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      securityContext:
        runAsUser: -1
      containers:
        - name: tiller
          image: gcr.io/kubernetes-helm/tiller:canary
          imagePullPolicy: IfNotPresent
          command: ["/tiller"]
          args: ["--listen=127.0.0.1:44134"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
          env:
            - name: TILLER_NAMESPACE
              value: kube-system
          livenessProbe:
            httpGet:
              path: /liveness
              port: 44135
            initialDelaySeconds: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /readiness
              port: 44135
            initialDelaySeconds: 1
            timeoutSeconds: 1
